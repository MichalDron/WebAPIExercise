// <auto-generated />
using CustomerAddressManager.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CustomerAddressManager.Dal.Migrations
{
    [DbContext(typeof(CustomerAddressContext))]
    [Migration("20190225133255_InititalCreate")]
    partial class InititalCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CustomerAddressManager.Dal.Models.Address", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("AddressType")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<string>("Country")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Street")
                        .HasMaxLength(100);

                    b.Property<string>("Zip")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("CustomerId", "AddressType");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("CustomerAddressManager.Dal.Models.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("City")
                        .HasMaxLength(100);

                    b.Property<string>("Country")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Street")
                        .HasMaxLength(100);

                    b.Property<string>("Zip")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("CustomerId", "Name");

                    b.ToTable("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
